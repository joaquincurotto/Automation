<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Starting execution for: demoBlaze]]>
    </line>
    <line>
      <![CDATA[Navigate to DemoBlaze]]>
    </line>
    <line>
      <![CDATA[Click on Sign Up button]]>
    </line>
    <line>
      <![CDATA[Type new Username]]>
    </line>
    <line>
      <![CDATA[Type new Password]]>
    </line>
    <line>
      <![CDATA[Click on Sign Up button from pop up]]>
    </line>
    <line>
      <![CDATA[Verify Alert message]]>
    </line>
    <line>
      <![CDATA[Click on Log In button]]>
    </line>
    <line>
      <![CDATA[Type username]]>
    </line>
    <line>
      <![CDATA[Type password]]>
    </line>
    <line>
      <![CDATA[Click on login button]]>
    </line>
    <line>
      <![CDATA[Verify if user is logged in]]>
    </line>
    <line>
      <![CDATA[Click on Laptops button]]>
    </line>
    <line>
      <![CDATA[Click on a Laptop from the grid]]>
    </line>
    <line>
      <![CDATA[Click on Add to card button]]>
    </line>
    <line>
      <![CDATA[Verify alert message]]>
    </line>
    <line>
      <![CDATA[Click on Cart button]]>
    </line>
    <line>
      <![CDATA[Verify that the selected laptop was added to the cart]]>
    </line>
    <line>
      <![CDATA[The execution result is: PASSED]]>
    </line>
    <line>
      <![CDATA[Finishing execution for: demoBlaze]]>
    </line>
  </reporter-output>
  <suite started-at="2023-05-25T12:21:46 UYT" name="Baufest Tests" finished-at="2023-05-25T12:22:07 UYT" duration-ms="21415">
    <groups>
    </groups>
    <test started-at="2023-05-25T12:21:46 UYT" name="Automation" finished-at="2023-05-25T12:22:07 UYT" duration-ms="21415">
      <class name="com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests">
        <test-method signature="testGetObtenerMascota()[pri:0, instance:com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests@7920ba90]" started-at="2023-05-25T12:22:03 UYT" name="testGetObtenerMascota" finished-at="2023-05-25T12:22:05 UYT" duration-ms="1915" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests.testGetObtenerMascota(restAssuredTests.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetObtenerMascota -->
        <test-method signature="testPostAgregarMascota()[pri:0, instance:com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests@7920ba90]" started-at="2023-05-25T12:22:05 UYT" name="testPostAgregarMascota" finished-at="2023-05-25T12:22:07 UYT" duration-ms="1353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostAgregarMascota -->
        <test-method signature="testPutActualizarMascota()[pri:0, instance:com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests@7920ba90]" started-at="2023-05-25T12:22:07 UYT" name="testPutActualizarMascota" finished-at="2023-05-25T12:22:07 UYT" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutActualizarMascota -->
      </class> <!-- com.jcurotto.AutomationDemo_test.restAssured.restAssuredTests -->
      <class name="com.jcurotto.AutomationDemo_test.tests.tests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6]" started-at="2023-05-25T12:21:46 UYT" name="beforeSuite" finished-at="2023-05-25T12:21:46 UYT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="before(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6]" started-at="2023-05-25T12:21:46 UYT" name="before" finished-at="2023-05-25T12:21:46 UYT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.jcurotto.AutomationDemo_test.tests.tests.demoBlaze(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=tests.demoBlaze(java.lang.String,java.lang.String)[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Starting execution for: demoBlaze]]>
            </line>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="demoBlaze(java.lang.String,java.lang.String)[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6]" started-at="2023-05-25T12:21:46 UYT" name="demoBlaze" data-provider="DataProvider" finished-at="2023-05-25T12:22:02 UYT" duration-ms="15593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAUFEST100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Navigate to DemoBlaze]]>
            </line>
            <line>
              <![CDATA[Click on Sign Up button]]>
            </line>
            <line>
              <![CDATA[Type new Username]]>
            </line>
            <line>
              <![CDATA[Type new Password]]>
            </line>
            <line>
              <![CDATA[Click on Sign Up button from pop up]]>
            </line>
            <line>
              <![CDATA[Verify Alert message]]>
            </line>
            <line>
              <![CDATA[Click on Log In button]]>
            </line>
            <line>
              <![CDATA[Type username]]>
            </line>
            <line>
              <![CDATA[Type password]]>
            </line>
            <line>
              <![CDATA[Click on login button]]>
            </line>
            <line>
              <![CDATA[Verify if user is logged in]]>
            </line>
            <line>
              <![CDATA[Click on Laptops button]]>
            </line>
            <line>
              <![CDATA[Click on a Laptop from the grid]]>
            </line>
            <line>
              <![CDATA[Click on Add to card button]]>
            </line>
            <line>
              <![CDATA[Verify alert message]]>
            </line>
            <line>
              <![CDATA[Click on Cart button]]>
            </line>
            <line>
              <![CDATA[Verify that the selected laptop was added to the cart]]>
            </line>
          </reporter-output>
        </test-method> <!-- demoBlaze -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6]" started-at="2023-05-25T12:22:02 UYT" name="after" finished-at="2023-05-25T12:22:03 UYT" duration-ms="1687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoBlaze status=SUCCESS method=tests.demoBlaze(java.lang.String,java.lang.String)[pri:0, instance:com.jcurotto.AutomationDemo_test.tests.tests@e50a6f6] output=Navigate to DemoBlaze]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[The execution result is: PASSED]]>
            </line>
            <line>
              <![CDATA[Finishing execution for: demoBlaze]]>
            </line>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.jcurotto.AutomationDemo_test.tests.tests -->
    </test> <!-- Automation -->
  </suite> <!-- Baufest Tests -->
</testng-results>
